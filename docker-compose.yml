version: '3'

services:
  elasticsearch:
    container_name: temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    expose:
      - 9200
    volumes:
      - /var/lib/elasticsearch/data
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
      - frontend.enableUpdateWorkflowExecution=true
      - frontend.enableUpdateWorkflowExecutionAsyncAccepted=true
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./docker/roadrunner/dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    ports:
      - 8081:8080

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.79.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    ports:
      - 4317:4317
      - 4318:4318
    volumes:
      - ./docker/roadrunner/otel/otel-collector-config.yml:/etc/otel-collector-config.yml

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin-slim
    ports:
      - 9411:9411

  sm-rr-skeleton:
    container_name: sm-rr-skeleton
    build:
      context: .
      dockerfile: docker/roadrunner/Dockerfile
    depends_on:
      - temporal
    environment:
      APP_ENV: ${APP_ENV}
      PHP_IDE_CONFIG: "serverName=sm-rr-skeleton"
      FINANCE_APP_CONTAINER: ${FINANCE_APP_CONTAINER:-finance_app}
      SERVER_NAME: ${SERVER_NAME}
      SERVICE_NAME: ${SERVICE_NAME}
      TEMPORAL_CLI_ADDRESS: temporal:7233
      TELEMETRY_DRIVER: otel
      OTEL_TRACES_EXPORTER: otlp
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_ENDPOINT: http://collector:4318
      OTEL_PHP_TRACES_PROCESSOR: simple
      TEMPORAL_ENDPOINT: ${TEMPORAL_HOST}:${TEMPORAL_PORT}
      TEMPORAL_HOST: temporal
      TEMPORAL_PORT: 7233
      OTEL_HOST: ${OTEL_HOST}
      OTEL_PORTL: ${OTEL_PORT}
      OTEL_COLLECTOR_ENDPOINT: http://${OTEL_HOST}:${OTEL_PORT}
    volumes:
      - ./:/home/app/src
      - ./docker/development/https/local.crt:/etc/https/local.crt
      - ./docker/development/https/local.key:/etc/https/local.key
      - ./docker/development/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/development/php/conf.d/xdebug.ini:/etc/php/8.2/cli/conf.d/99-xdebug.ini
      - ./docker/development/php/conf.d/xdebug.ini:/etc/php/8.2/fpm/conf.d/99-xdebug.ini
      - ./docker/development/php/conf.d/security.ini:/usr/local/etc/php/conf.d/99-security.ini
      - ./docker/development/php/conf.d/error.ini:/usr/local/etc/php/conf.d/99-error.ini
    ports:
      # http
      - ${WEB_HOST_PORT:-18080}:8080
      # grpc
      - ${GRPC_HOST_PORT:-19000}:9000
      # https
      - ${HTTPS_HOST_PORT:-3002}:3002
    command: [ "/root/entrypoint.sh", "/root/wait-for-temporal.sh", "temporal", "/usr/local/bin/rr", "serve", "-c", "/home/app/src/docker/roadrunner/.rr.dev.yaml" ]

  sm-rr-mariadb:
    container_name: sm-rr-mariadb
    image: gitlab.paysera.net:5050/paysera/developer-environment/tools-mariadb:dev
    volumes:
      - app_card_db_data:/var/lib/mysql:rw
    ports:
      - ${DB_HOST_PORT_MD:-13306}:${DATABASE_PORT:-3306}

volumes:
  app_card_db_data:
